################################################################################
# Give Usage Information						       #
################################################################################
usage() {
    echo "Usage: $0 start|stop|clear|reload|restart|status|version"
    exit 1
}
################################################################################
# E X E C U T I O N    B E G I N S   H E R E				       #
################################################################################
initialize

finished=0

while [ $finished -eq 0 ]; do
    [ $# -eq 0 ] && usage 1
    option=$1
    case $option in
	-*)
	    option=${option#-}

	    [ -z "$option" ] && usage 1

	    while [ -n "$option" ]; do
		case $option in
		    q*)
			QUIET=$(($QUIET + 1 ))
			option=${option#q}
			;;
		    n*)
			NOROUTES=Yes
			option=${option#n}
			;;
		    *)
			usage 1
			;;
		esac
	    done
	    shift
	    ;;
	*)
	    finished=1
            ;;
    esac
done

if [ $# -eq 0 ]; then
    usage 1
fi

COMMAND="$1"

case "$COMMAND" in
    start)
	echo "Starting Shorewall...."
	define_firewall
	status=$?
	echo "done."
	;;
    stop)
	echo "Stopping Shorewall...."
	stop_firewall
	status=0
	echo "done."
	;;
    restart)
	echo "Restarting Shorewall...."
	define_firewall
	status=$?
	echo "done."
	;;
    clear)
	echo "Clearing Shorewall...."
	clear_firewall
	status=0
	echo "done."
	;;
    status)
	echo "Shorewall-$VERSION Status at $HOSTNAME - $(date)"
	echo
	if iptables -L shorewall -n > /dev/null 2>&1; then
	    echo "Shorewall is running"
	    status=0
	else
	    echo "Shorewall is stopped"
	    status=4
	fi

	if [ -f /var/lib/shorewall/state ]; then
	    state="$(cat /var/lib/shorewall/state)"
	    case $state in
		Stopped*|Clear*)
		    status=3
		    ;;
	    esac
	else
	    state=Unknown
	fi
	echo "State:$state"
	echo
	;;
    version)
	echo $VERSION
	status=0
	;;
    *)
	usage
	status=2
	;;
esac

exit $status
