<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
  <meta name="revised"
 content="$Id$">
  <title>Shorewall News</title>
</head>
<body>
<h1 style="text-align: left;">Shorewall News and Announcements<br>
</h1>
<span style="font-weight: bold;">Tom Eastep<br>
<br>
</span>Copyright © 2001-2006 Thomas M. Eastep<br>
<p>Permission is granted to copy, distribute and/or modify this
document under the terms of the GNU Free Documentation License, Version
1.2 or any later version published by the Free Software Foundation;
with no Invariant Sections, with no Front-Cover, and with no Back-Cover
Texts. A copy of the license is included in the section entitled “<span
 class="quote"><a href="GnuCopyright.htm" target="_self">GNU Free
Documentation License</a></span>”.<br>
</p>
<p>June 11, 2006<br>
</p>
<hr style="width: 100%; height: 2px;">
<p></p>
<!-- Shorewall Release 3.0.5 -->
<span style="font-weight: bold;">2006-07-11 Shorewall 3.2.0<br>
</span><span style="font-weight: bold;"></span>
<pre>New Features:<br><br>1)  Shorewall has always been very noisy (lots of messages). No longer.<br><br>    You set the default level of verbosity using the VERBOSITY option in<br>    shorewall.conf. If you don't set it (as would be the case of you use your<br>    old shorewall.conf file) then VERBOSITY defaults to a value of 2 which<br>    results in behavior compatible with previous Shorewall versions.<br>    A value of 1 suppresses some of the output (like the old -q option did)<br>    while a value of 0 makes Shorewall almost silent. A value of -1<br>    suppresses all output except warning and error messages.<br><br>    The value specified in the 3.2 shorewall.conf is 1. So you can make<br>    Shorewall as verbose as previously using a single -v and you can make it<br>    almost silent by using a single -q.<br><br>    If VERBOSITY is set at 2, you can still make a command nearly<br>    silent by using two "q"s (e.g., shorewall -qq restart).<br><br>    In summary, each "q" subtracts one from VERBOSITY while each "v" adds one<br>    to VERBOSITY.<br><br>    The "shorewall show log", "shorewall logwatch" and "shorewall dump"<br>    commands require VERBOSITY to be greater than or equal to 3 to<br>    display MAC addresses.This is consistent with the previous<br>    implementation which required a single -v to enable MAC display but<br>    means that if you set VERBOSITY=0 in shorewall.conf, then you will<br>    need to include -vvv in commands that display log records in order<br>    to have MACs displayed.<br><br>    To make the display of MAC addresses less cumbersome, a '-m' option has<br>    been added to the "show" and logwatch commands:<br><br>        shorewall show -m log<br>        shorewall logwatch -m<br><br>2)  A new 'shorewall compile' command has been added.<br><br>     shorewall compile [ -e ] [ &lt;config directory&gt; ] &lt;script file&gt;<br><br>    where:<br><br>        -e                    Allows the generated script to run<br>                              on a system with Shorewall Lite installed.<br>                              Generates an error if the configuration uses<br>                              an option that would prevent the generated<br>                              script from running on a system other than<br>                              where the 'compile' command is running (see<br>                              additional consideration a) below).<br><br>        &lt;config directory&gt;    Is an optional directory to be searched for<br>                              configuration files prior to those listed<br>                              in CONFIG_DIR in<br>                              /etc/shorewall/shorewall.conf.<br><br>        &lt;script file&gt;         Is the name of the output file.<br><br>    The 'compile' command processes the configuration and generates a<br>    script file which may then be executed (either directly or using the<br>    'shorewall restore' command) to configure the firewall.<br><br>    The generated script contains error checking and will terminate if an<br>    important command fails. Before terminating:<br><br>    a) The script will check for the existence of the restore script<br>       specified by the RESTOREFILE variable in shorewall.conf. If that<br>       restore script exists, it is executed.<br><br>    b) If the restore script doesn't exist but Shorewall appears to be<br>       installed on the system, the equivalent of an<br>       "/sbin/shorewall stop" command is executed.<br><br>    Some additional considerations:<br><br>    a) When you run 'compile' on one system and then run the generated script<br>       on another system under Shorewall Lite, there are certain limitations.<br><br>       1) A compatible version of Shorewall Lite must be running on the remote<br>          system. Going forward, the goal is that any minor version of<br>          the current major version will be compatible. So if the<br>          program is compiled using Shorewall 3.2.x, any 3.2.y version<br>          or 3.p.q version (where p &gt; 2) of Shorewall Lite will be compatible.<br>       2) The 'detectnets' interface option is not allowed.<br>       3) DYNAMIC_ZONES=Yes is not allowed.<br>       4) You must supply the file /etc/shorewall/capabilities to provide<br>          the compiler with knowledge of the capabilities of the system<br>          where the script is to be run. See below.<br>       5) If your /etc/shorewall/params file contains code other than simple<br>          assignment statements with contant values, then you should move<br>          that code to /etc/shorewall/init. That way, the code will be<br>          executed on the target system when the compiled script is run and<br>          not on the local system at compile time.<br><br>    b) If you run the "shorewall compile" or "shorewall check" commands under<br>       a user other than 'root', then you must supply<br>       /etc/shorewall/capabilities.<br><br>    c) To aid in building /etc/shorewall/capabilities, a 'shorecap' program<br>       is provided in the Shorewall Lite package and is installed in<br>       /usr/share/shorewall-lite/shorecap when you install Shorewall Lite.<br><br>       For instructions about running shorecap, see the comments at the<br>       top of the program file (it's a simple shell script).<br><br>    The "shorewall start" and "shorewall restart" commands have been<br>    rewritten to use compilation. They both compile a temporary program<br>    then run it. This results in a slightly longer elapsed time than the<br>    similar commands required under earlier versions of Shorewall but new<br>    connections are blocked for a much smaller percentage of that time.<br><br>    If an error is found during the compilation phase, /sbin/shorewall<br>    terminates and the Shorewall state is unchanged.<br><br>    Under Shorewall 3.1.5, "shorewall restart" takes roughly 16.5 seconds<br>    on my firewall:<br><br>        real    0m16.599s<br>        user    0m6.292s<br>        sys     0m9.885s<br><br>    Of the elapsed 16.5 seconds, new connections are disabled less than<br>    3.5 seconds. Here are some numbers for comparison:<br><br>    A) shorewall restart (Shorewall 3.0.4)<br><br>        real &nbsp; &nbsp;0m17.540s<br>        user &nbsp; &nbsp;0m5.956s<br>        sys &nbsp; &nbsp; 0m10.737s<br><br>    B) ./foo restart # foo created using "shorewall compile"<br><br>        real    0m3.297s<br>        user    0m1.444s<br>        sys     0m1.728s<br><br>    C) shorewall restore (Shorewall 3.0.4) # Restores from file generated by<br>                                           # "shorewall save"<br><br>        real &nbsp; &nbsp;0m1.164s<br>        user &nbsp; &nbsp;0m0.556s<br>        sys &nbsp; &nbsp; 0m0.608s<br><br>    D) shorewall restore (shorewall 3.1.5)<br><br>        real    0m1.637s<br>        user    0m0.728s<br>        sys     0m0.584s<br><br>    The time difference between B and C reflects the difference between<br>    "iptables-restore" and multiple executions of "iptables". The time<br>    difference between C and D results from the fact that the "restore"<br>    command in Shorewall 3.1 runs the compiled program in a way that<br>    turns all iptables commands into no-ops then invokes<br>    iptables-restore. The system is a 1.4Ghz Celeron with 512MB RAM.<br><br>    As a final part of this change, the "check" command now compiles the<br>    current configuration and writes the compiled output to /dev/null. So<br>    "check" performs all of the same validation that compile does. Note that<br>    there is still no guarantee that the generated script won't encounter<br>    run-time errors.<br><br>2)  The /etc/shorewall/maclist file has a new column layout. The first column<br>    is now DISPOSITION. This column determines what to do with matching<br>    packets and can have the value ACCEPT or DROP (if MACLIST_TABLE=filter, it<br>    can also contain REJECT). This change is upward compatible so your existing<br>    maclist file can still be used.<br><br>    ACCEPT, DROP and REJECT may be optionally followed by a log level to<br>    cause the packet to be logged.<br><br>4)  In macro files, you can now use the reserved words SOURCE and DEST<br>    in the columns of the same names. When Shorewall expands the<br>    macro, it will substitute the SOURCE from the macro invocation for<br>    SOURCE and the DEST from the invocation for DEST. This allows you<br>    to write macros that act in both directions (from source to destination<br>    and from destination to source).<br><br>    Example:<br><br>        macro.FOO:<br><br>            PARAM      SOURCE        DEST      udp     500<br>            PARAM      DEST          SOURCE    udp     500<br><br>        /etc/shorewall/rules:<br><br>            FOO/ACCEPT    fw         net<br><br>        Resulting rules:<br><br>            ACCEPT        fw         net        udp     500<br>            ACCEPT        net        fw         udp     500<br><br>    This new feature has been used to implement the SMBBI macro.<br>    SMBBI is the same as the SMB macro with the exception that<br>    it passes SMB traffic in both directions whereas SMB only<br>    passes that traffic in one direction.<br><br>5)  In the /etc/shorewall/rules file and in actions, you may now specify<br>    'tcp:syn' in the PROTO column. 'tcp:syn' is equivalent to 'tcp' but also<br>    requires that the SYN flag is set and the RST, FIN and ACK flags be<br>    off ("--syn" is added to the iptables rule).<br><br>    As part of this change, Shorewall no longer adds the "--syn" option<br>    to TCP rules that specify QUEUE as their target.<br><br>6)  /sbin/shorewall now supports a "-t" option that causes all progress<br>    messages to be timestamped.<br><br>    Example (VERBOSITY=0 in shorewall.conf):<br><br>    gateway:/etc/shorewall # shorewall -t restart<br>    07:08:51 Compiling...<br>    07:09:05 Shorewall configuration compiled to /var/lib/shorewall/.restart<br>    07:09:05 Restarting Shorewall....<br>    07:09:08 done.<br>    gateway:/etc/shorewall #<br><br>7)  A 'refreshed' extension script has been added -- it is executed after<br>    "shorewall refresh" has finished.<br><br>8)  Two new dynamic blacklisting commands have been added:<br><br>        logdrop -- like 'drop' but causes the dropped packets to be logged.<br><br>        logreject -- like 'reject' but causes the rejected packets to be<br>                     logged.<br><br>    Packets are logged at the BLACKLIST_LOGLEVEL if one was specified at the<br>    last "shorewall [re]start"; otherwise, they are logged at the 'info'<br>    log level.<br><br>9)  A new IMPLICIT_CONTINUE option has been added to shorewall.conf. When<br>    this option is set to "Yes", it causes subzones to be treated differently<br>    with respect to policies.<br><br>    Subzones are defined by following their name with ":" and a list of parent<br>    zones (in /etc/shorewall/zones). Normally, you want to have a set of<br>    special rules for the subzone and if a connection doesn't match any of<br>    those subzone-specific rules then you want the parent zone rules and<br>    policies to be applied. With IMPLICIT_CONTINUE=Yes, that happens<br>    automatically.<br><br>    If IMPLICIT_CONTINUE=No or if IMPLICIT_CONTINUE is not set, then<br>    subzones are not subject to this special treatment.<br><br>    With IMPLICIT_CONTINUE=Yes, an implicit CONTINUE policy may be overridden<br>    by including an explicit policy (one that does not specify "all" in either<br>    the SOURCE or the DEST columns).<br><br>    Example:<br><br>    /etc/shorewall/zones:<br><br>        prnt       ipv4<br>        chld:prnt  ipv4<br><br>    Traffic to/from the 'chld' zone will first pass through the applicable<br>    'chld' rules and if none of those rules match then it will be passed through<br>    the appropriate 'prnt' rules. If the connection request does not match<br>    any of the 'prnt' rules then the relevant 'prnt' policy is applied.<br><br>    If you want the fw-&gt;chld policy to be ACCEPT, simply add this entry to<br>    /etc/shorewall/policy:<br><br>        $FW      chld        ACCEPT<br><br>    Traffic from all other zones to 'chld' will be subject to the implicit<br>    CONTINUE policy.<br><br>10) Shorewall now includes support for explicit routing rules when the<br>    /etc/shorewall/providers file is used. A new file,<br>    /etc/shorewall/route_rules can be used to add routing rules based on<br>    packet source and/or destination.<br><br>    The file has the following columns:<br><br>                SOURCE(optonal) An ip address (network or host) that<br>                                matches the source IP address in a packet.<br>                                May also be specified as an interface<br>                                name optionally followed by ":" and an<br>                                address. If the define 'lo' is specified,<br>                                the packet must originate from the firewall<br>                                itself.<br><br>                DEST(optional)  An ip address (network or host) that<br>                                matches the destination IP address in a packet.<br><br>                                If you choose to omit either SOURCE or DEST,<br>                                place "-" in the column. Note that you<br>                                may not omit both SOURCE and DEST.<br><br>                PROVIDER        The provider to route the traffic through.<br>                                May be expressed either as the provider name<br>                                or the provider number. You may also specify<br>                                the 'main' routing table here, either by<br>                                name or by number (254).<br><br>                PRIORITY<br>                                The rule's priority which determines the order<br>                                in which the rules are processed.<br><br>                                1000-1999   Before Shorewall-generated<br>                                            'MARK' rules<br><br>                                11000- 11999 After 'MARK' rules but before<br>                                            Shorewall-generated rules for<br>                                            provider interfaces.<br><br>                                26000-26999 After provider interface rules but<br>                                            before 'default' rule.<br><br>                                Rules with equal priority are applied in<br>                                the order in which they appear in the file.<br><br>    Example 1: You want all traffic coming in on eth1 to be routed to the ISP1<br>             provider:<br><br>            #PROVIDER   PRIORITY        SOURCE                  DEST<br>            ISP1        1000            eth1<br><br>    Example 2: You use OpenVPN (routed setup /tunX) in combination with multiple<br>               providers. In this case you have to set up a rule to ensure that<br>               the OpenVPN traffic is routed back through the tunX interface(s)<br>               rather than through any of the providers. 10.8.0.0/24 is the<br>               subnet choosen in your OpenVPN configuration (server 10.8.0.0<br>               255.255.255.0)<br><br>        #SOURCE                 DEST            PROVIDER        PRIORITY<br>        -                       10.8.0.0/24     main            1000<br><br>11) Prior to now, it has not been possible to use connection marking in<br>    /etc/shorewall/tcrules if you have a multi-ISP configuration that uses the<br>    'track' option.<br><br>    Beginning with this release, you may now set HIGH_ROUTE_MARKS=Yes in<br>    shorewall.conf to effectively divide the packet mark and connection mark<br>    into two 8-byte mark fields.<br><br>    When you do this:<br><br>        a) The MARK field in the providers file must have a value that is<br>           less than 65536 and that is a multiple of 256 (using hex<br>           representation, the values are 0x0100-0xFF00 with the low-order<br>           8 bits being zero).<br><br>        b) You may only set those mark values in the PREROUTING chain.<br><br>        c) Marks used for traffic shaping must still be in the range of 1-255<br>           and may still not be set in the PREROUTING chain.<br><br>        d) When you SAVE or RESTORE in tcrules, only the TC mark value is<br>           saved or restored. Shorewall handles saving and restoring the<br>           routing (provider) marks.<br><br>12) A TOS column has been added to /etc/shorewall/tcrules. This allows marking<br>    based on the contents of the TOS field in the packet header.<br><br>13) Beginning with this release, the way in which packet marking in the<br>    PREROUTING chain interracts with the 'track' option in /etc/shorewall/providers<br>    has changed in two ways:<br><br>    a)  Packets *arriving* on a tracked interface are now passed to the PREROUTING<br>        marking chain so that they may be marked with a mark other than the<br>        'track' mark (the connection still retains the 'track' mark).<br><br>    b)  When HIGH_ROUTE_MARKS=Yes, you can still clear the mark on packets<br>        in the PREROUTING chain (i.e., you can specify a mark value of zero).<br><br>14) Shorewall will now attempt to detect the MTU of devices listed in<br>    /etc/shorewall/tcdevices and will use the detected MTU in setting<br>    up traffic shaping.<br><br>15) In /etc/shorewall/rules, the values "all-" and "all+-" may now be<br>    used for zone names. "all-" means "All zones except the firewall";<br>    "all+-" means "All zones except the firewall" and intra-zone<br>    traffic is included.<br><br>16) Kernel version 2.6.16 introduces 'xtables', a new common packet<br>    filtering and connection tracking facility that supports both IPv4<br>    and IPv6. Because a different set of kernel modules must be loaded<br>    for xtables, Shorewall now includes two 'modules' files:<br><br>    a) /usr/share/shorewall/modules -- the former<br>    /etc/shorewall/modules<br><br>    b) /usr/share/shorewall/xmodules -- a new file that support<br>    xtables.<br><br>    If you wish to use the new file, then simply execute this command:<br><br>    cp -f /usr/share/shorewall/xmodules /etc/shorewall/modules<br><br>17) Shorewall now checks to see if devices in /etc/shorewall/tcdevices<br>    exist. If a device does not exist, a warning message is issued and<br>    that device's entries in /etc/shorewall/tcclasses are ignored. This<br>    applies to "shorewall start", "shorewall restart" and "shorewall<br>    refresh".<br><br>18) "load" and "reload" commands have been added. These commands allow<br>    a non-root user with ssh access to a remote system running<br>    Shorewall Lite to compile a firewall script on the local system and<br>    to install that script on the remote system.<br><br>    Syntax is:<br><br>           shorewall [re]load [ &lt;directory&gt; ] &lt;system&gt;<br><br>    If &lt;directory&gt; is omitted, the current working directory is<br>    assumed.<br><br>    The command is equivalent to:<br><br>    /sbin/shorewall compile -e &lt;directory&gt; firewall &amp;&amp;\<br>    scp firewall root@&lt;system&gt;:/var/lib/shorewall-lite/ &amp;&amp;\<br>    ssh root@&lt;system&gt; '/sbin/shorewall-lite [re]start' # Note 1<br><br>    In other words, the configuration in the specified (or defaulted)<br>    directory is compiled to a file called firewall in that<br>    directory. If compilation succeeds, then 'firewall' is copied to the<br>    (usually remote) &lt;system&gt; using scp. If the copy succeeds,<br>    Shorewall Lite on &lt;system&gt; is started or restarted via ssh (<br>    load causes Shorewall Lite to be started and 'reload' causes<br>    Shorewall Lite to be re-started)<br><br>    Note 1: In Shorewall Lite 3.2.0 RC4, the 'firewall' script has moved<br>    from /usr/share/shorewall-lite/ to /var/lib/shorewall-lite in<br>    packages from shorewall.net. The package maintainers for the<br>    various distributions are free to choose the directory where the<br>    script will be stored under their distribution by altering the<br>    value of LITEDIR in /usr/share/shorewall/configpath. You can run the<br>    "shorewall show config" command to see how your distribution<br>    defines LITEDIR.<br></pre>
<span style="font-weight: bold;">2006-05-27 Shorewall 2.4.9<br>
</span><span style="font-weight: bold;"></span>
<pre>Problems corrected in 2.4.9<br><br>1)  Updated the bogons file to reflect recent IANA allocations.<br><br>2)  If you use SAME or SAME:nodst in the ADDRESS column of /etc/shorewall/masq and<br>    if you set ADD_SNAT_ALIASES=Yes in shorewall.conf, then "shorewall start" will<br>    fail with the error 'Error: an inet prefix is expected rather than "SAME".'.<br><br>3)  It is now possible to exclude a single source MAC address using<br>    !&lt;MAC address&gt;. Previously, a startup error occurred.<br></pre>
<span style="font-weight: bold;">2006-05-06 Shorewall 3.0.7<br>
</span>
<pre>Problems corrected in 3.0.7<br><br>1)  Previously, if your kernel did not supply the mangle table FORWARD chain<br>    then "shorewall [re]start" would fail. Now, if your mangle table does<br>    not supply this chain Shorewall will avoid using either that chain or<br>    the mangle table POSTROUTING chain. This change is strictly to stop Shorewall<br>    from blowing up during [re]start on very old kernels (such as 2.4.17<br>    running on a PS2); if your kernel does not support these chains and you<br>    try to mark packets in either of them using entries in<br>    /etc/shorewall/tcrules, [re]start will fail.<br><br>2)  Previously, if there were more than 10 IP addresses on a multi-ISP interface,<br>    some of the routing rules generated by Shorewall were placed after the<br>    default rule which resulted in them not being recognized.<br><br>3)  When install.sh is used to install on a Debian or Ubuntu system, the<br>    SUBSYSLOCK option in shorewall.conf was not being cleared.<br>    It will now be cleared, provided that Perl is installed on the system.<br><br>4)  When exclusion lists appeared in the /etc/shorewall/tcrules file, the<br>    resulting 'exclusion chains' (whose names begin with 'excl_') were not<br>    deleted as part of 'shorewall [re]start'. This meant that 'refresh'<br>    would fail, either the first or second time that it was done since<br>    the last 'shorewall [re]start'.<br><br>Other changes in 3.0.7<br><br>None.<br><br></pre>
<!-- Shorewall Release 3.0.5 ENDS-->
<!-- Shorewall moving to Subversion --><span style="font-weight: bold;">2006-03-28
Shorewall moved to Subversion <br>
</span>
<pre> Effectively today, Shorewall source code repository was migrated to Subversion SCM.<br><br>Please read <a
 href="https://sourceforge.net/svn/?group_id=22587">https://sourceforge.net/svn/?group_id=22587 </a>
and <a
 href="http://www.shorewall.net/download.htm#SVN"> http://www.shorewall.net/download.htm#SVN </a>
for more information.

</pre>
<!-- Moving to Subversion ENDS --><!-- Shorewall Release 3.0.5 -->
<span style="font-weight: bold;">2006-03-28 Shorewall 3.0.6<br>
</span>
<pre>Problems corrected in 3.0.6<br><br>1)  A typo in the output of "help drop" has been corrected.<br><br>2)  Previously, 'shorewall start' would fail in the presence of a network<br>    interface named 'inet'.<br><br>3)  A shell syntax error was reported when duplicate policies appeared in<br>    /etc/shorewall/policy.<br><br>4)  The iptable_nat and iptable_mangle modules were previously omitted<br>    from /etc/shorewall/modules.<br><br>5)  If you use SAME or SAME:nodst in the ADDRESS column of /etc/shorewall/masq <br>    and if you set ADD_SNAT_ALIASES=Yes in shorewall.conf, then "shorewall <br>    start" will fail with the error 'Error: an inet prefix is expected rather <br>    than "SAME".'.<br><br>6)  Previously, the 'routeback' option was ignored in an entry in the<br>    /etc/shorewall/hosts file that referred to a (set of) bridge port(s).<br><br>    Example:<br><br>            dmz        xenbr0:vif+           routeback<br><br>Other changes in 3.0.6<br><br>1)  A 'refreshed' extension script has been added -- it is executed after<br>    "shorewall refresh" has finished.<br></pre>
<!-- Shorewall Release 3.0.5 ENDS-->
<!-- Shorewall Release 3.0.5 --><span style="font-weight: bold;">2006-02-10
Shorewall 3.0.5<br>
</span>
<pre>Problems corrected in Shorewall 3.0.5<br><br>1)  Previously, if /etc/shorewall/ipsets existed, it was run when Shorewall starts<br>    but not when Shorewall was restored.<br><br>2)  When using the NETKEY IPSEC implementation in kernel 2.6 but without the<br>    policy match patch and the Netfilter/IPSEC patches, previously an<br>    entry in /etc/shorewall/tunnels was not sufficient in cases where:<br><br>    a) gw&lt;-&gt;gw traffic was encrypted<br>    b) The gw&lt;-&gt;gw policy through the tunnel was not ACCEPT<br><br>    Thanks to Tuomo Soini, this has been corrected. By simply including the<br>    remote VPN zone in the GATEWAY ZONE column for the tunnel's entry, no<br>    additional rules are required.<br><br>3)  Extra blank output lines are no longer produced by install.sh (patch<br>    courtesy of Tuomo Soini).<br><br>4)  TCP packets sent to QUEUE by rules in the ESTABLISHED section of the<br>    rules file previously didn't work (they had the "--syn" parameter<br>    added to them which resulted in a rule that no traffic would match).<br><br>    WARNING: If you use the QUEUE target from an action, Shorewall will<br>    still insert --syn if the protocol is tcp. So you don't want to<br>    invoke such an action from the ESTABLISHED section of the rules<br>    file.<br><br>5)  The description of the SOURCE column in /etc/shorewall/rules has been<br>    improved (patch courtesy of Ed Suominen).<br><br>6)  The 'allow', 'drop' and 'reject' commands no longer produce iptables<br>    errors when executed while Shorewall is not started.<br><br>7)  The spelling of "maximize-throughput" has been corrected in the code<br>    that implements tcclasses parsing. Patch courtesy of Paul Traina.<br><br>8)  Shorewall now generates the correct match for devices in<br>    /etc/shorewall/tcdevices that are actually bridge ports.<br><br>New Features in Shorewall 3.0.5<br><br>1)  The facilities available for dealing with the TOS field in<br>    /etc/shorewall/tcclasses has been expended. The OPTIONS field is now may<br>    contain a comma-separates list of the following:<br><br>	tos=0x&lt;value&gt;[/0x&lt;mask&gt;]	(mask defaults to 0xff)<br>					- this lets you define a classifier<br>					for the given &lt;value&gt;/&lt;mask&gt; combination<br>					of the IP packet's TOS/Precedence/DiffSrv<br>					octet (aka the TOS byte).  Please note,<br>					classifiers override all mark settings,<br>					so if you define a classifer for a class,<br>					all traffic having that mark will go in it<br>					regardless of any mark set on the packet<br>					by a firewall/mangle filter.<br><br>					NOTE: multiple tos= statements may be<br>					applied per class and per interface, but<br>					a given value/mask pair is valid for only<br>					ONE class per interface.<br><br>	tos-&lt;tosname&gt;			- aliases for the following TOS octet<br>					value and mask encodings.  TOS encodings<br>					of the "TOS byte" have been deprecated in<br>					favor of diffserve classes, but programs<br>					like ssh, rlogin, and ftp still use them.<br><br>   					tos-minimize-delay 	 0x10/0x10<br>					tos-maximize-throughput	 0x08/0x08<br>					tos-maximize-reliability 0x04/0x04<br>					tos-minimize-cost	 0x02/0x02<br>					tos-normal-service	 0x00/0x1e<br><br>	tcp-ack                 	-    defined causes an tc filter to<br>					be created that puts all tcp ack<br>					packets on that interface that have<br>					an size of &lt;=64 Bytes to go in this<br>					class. This is useful for speeding up<br>					downloads. Please note that the size<br>					of the ack packets is limited to 64<br>					bytes as some applications (p2p for<br>					example) use to make every packet an<br>					ack packet which would cause them<br>					all into here. We want only packets<br>					WITHOUT payload to match, so the size<br>					limit.<br><br>					NOTE: This option is only valid for<br>					ONE class per interface.<br><br>    Note that the semantics of 'tos-&lt;tosname&gt;' have changed slightly. Previously,<br>    these were tested using a mask of 0xff (example: tos-minimize-delay was<br>    equivalent to 0x10/0xff). Now each bit is tested individually.<br><br>    This enhancement is courtesy of Paul Traina.<br></pre>
<span style="font-weight: bold;">2006-01-05 Shorewall 3.0.4<br>
</span>
<pre>Problems Corrected in 3.0.4<br><br>1) &nbsp;The shorewall.conf file is once again "console friendly". Patch is<br>&nbsp; &nbsp; courtesy of Tuomo Soini.<br><br>2) &nbsp;A potential security hole has been closed. Previously, Shorewall ACCEPTed<br>&nbsp; &nbsp; all traffic from a bridge port that was sent back out on the same port. If<br>&nbsp; &nbsp; the port was described in /etc/shorewall/hosts using the wildcard "+" (eg,<br>&nbsp; &nbsp; xenbr0:vif+), this could lead to traffic being passed in variance with the<br>&nbsp; &nbsp; supplied policies and rules.<br><br>3) &nbsp;Previously, an intra-zone policy of NONE would cause a startup error. That<br>&nbsp; &nbsp; problem has been corrected.<br><br>4) &nbsp;When RETAIN_ALIASES=Yes, the script produced by "shorewall save" did not<br>&nbsp; &nbsp; add the retained aliases. This means that the following sequence of<br>&nbsp; &nbsp; events resulted in missing aliases:<br><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; shorewall start<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; shorewall restart<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; shorewall save<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; reboot<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; shorewall -f start (which is the default during boot up)<br><br>5) &nbsp;When a 2.x standard action is invoked with a log level (example<br>&nbsp; &nbsp; "AllowPing:info"), logging does not occur.<br><br>New Features in 3.0.4<br><br>1) &nbsp;By popular demand, the 'Limit' action described at<br>&nbsp; &nbsp; http://www1.shorewall.net/PortKnocking.html#Limit has been made a standard<br>&nbsp; &nbsp; action. Limit requires 'recent match' support in your kernel and iptables.<br><br>2) &nbsp;DISABLE_IPV6 no longer disabled local (loopback) IPV6 traffic. This<br>&nbsp; &nbsp; change is reported to improve Java startup time on some distributions.<br><br>3) &nbsp;Shorewall now contains support for wildcard ports. In<br>&nbsp; &nbsp; /etc/shorewall/hosts, you may specify the port name with trailing "+" then <br>&nbsp; &nbsp; use specific port names in rules.<br><br>&nbsp; &nbsp; Example:<br><br>&nbsp; &nbsp; /etc/shorewall/hosts<br><br>&nbsp; &nbsp; &nbsp; &nbsp; vpn &nbsp; &nbsp; &nbsp;br0:tap+<br><br>&nbsp; &nbsp; /etc/shorewall/rules<br><br>&nbsp; &nbsp; &nbsp; &nbsp; DROP &nbsp; &nbsp; &nbsp;vpn:tap0 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;vpn:tap1 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;udp &nbsp; &nbsp;9999<br><br>4) &nbsp;For the benefit of those who run Shorewall on distributions that don't <br>&nbsp; &nbsp; autoload kernel modules, /etc/shorewall/modules now contains load commands <br>&nbsp; &nbsp; for a wide range of Netfilter modules.<br></pre>
<span style="font-weight: bold;">2005-12-13
Shorewall 3.0.3<br>
</span>
<pre>Problems Corrected in 3.0.3<br><br>1) The comments in the /etc/shorewall/shorewall.conf and<br>   /etc/shorewall/hosts files have been changed to clarify when<br>   BRIDGING=Yes is required when dealing with bridges.<br><br>2) Thanks to Tuomo Soini, formatting of the comments in the tcdevices<br>   and tcclasses files has been cleaned up.<br><br>3) Specifying 'trace' on the 'safe-start' and 'safe-restart' command no<br>   longer fails.<br><br>4) The output of "shorewall help restore" has been corrected. It previously<br>   printed incorrect syntax for that command.<br><br>5) The README.txt file in the tarball was stale and contained incorrect<br>   information. It has been corrected.<br><br>6) The shorewall.conf default setting of CLEAR_TC was previously "No". Given<br>   that the default setting of TC_ENABLED is "Internal", the setting of<br>   CLEAR_TC has been changed to the more appropriate value of "Yes".<br><br>7) Specifying an interface name in the SOURCE column of /etc/shorewall/tcrules<br>   resulted in a startup error.<br><br>8) When the 'install.sh' script is used on Debian, it now creates<br>   /var/log/shorewall-init.log. And if perl is installed on the system then<br>   STARTUP_ENABLED=Yes is specified in shorewall.conf (the user must still<br>   set startup=1 in /etc/default/shorewall).<br><br>New Features in 3.0.3 <br>

1) A "shorewall show macros" command has been added. This command displays
   a list of the standard macros along with a brief description of each.

2) The '-q' option is now supported with 'safe-start' and 'safe-restart'.

3) The value "-" is now allowed in the ADDRESS/SUBNET column of
   /etc/shorewall/blacklist. That value is equivalent to specifying
   0.0.0.0/0 in that column.

4) The output of "shorewall show tc" and "shorewall show classifiers" is
   now included in the output from "shorewall dump". This will aid us in
   analyzing traffic shaping problems.

5) You can now specify 'none' in the COPY column of /etc/shorewall/providers
   to signal that you want Shorewall to only copy routes through the interface
   listed in the INTERFACE column.

   Note: This works on older versions of Shorewall as well. It is
         now documented.

6) An 'ipdecimal' command has been added to /sbin/shorewall. This command
   converts between dot-quad and decimal.

   Example:

    gateway:/etc/openvpn# shorewall ipdecimal 192.168.1.4
        3232235780
    gateway:/etc/openvpn# shorewall ipdecimal 3232235780
        192.168.1.4
    gateway:/etc/openvpn#

7) /etc/init.d/shorewall now supports a 'reload' command which is
   synonymous with the 'restart' command.
</pre>
<p> 2005-12-12 </p>
<hr style="width: 100%; height: 2px;"> <span style="font-weight: bold;">2005-12-12
Shorewall 2.4.7</span><br>
<br>
Problems Corrected in 2.4.7<br>
<br>
1) &nbsp;When MACLIST_TABLE=mangle and an interface is enabled for DHCP
(the<br>
&nbsp; &nbsp; 'dhcp' option is specified in /etc/shorewall/interfaces)
then broadcasts<br>
&nbsp; &nbsp; on UDP port 67 to address 255.255.255.255 from address
0.0.0.0 were being<br>
&nbsp; &nbsp; dropped and logged. While this did not prevent the client
from acquiring<br>
&nbsp; &nbsp; an IP address, it could result in lots of log messages.<br>
<br>
2) &nbsp;Entries for openvpn tunnels (including openvpnclient and<br>
&nbsp; &nbsp; openvpnserver) that specify a port but no protocol cause
startup<br>
&nbsp; &nbsp; errors as follows:<br>
<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;iptables v1.3.3: unknown
protocol `1194' specified<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Try `iptables -h' or 'iptables
--help' for more information.<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;ERROR: Command
"/usr/sbin/iptables -A net2fw -p 1194 -s<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;0.0.0.0/0 --sport 1194 -j
ACCEPT" Failed<br>
<br>
&nbsp; &nbsp; The problem may be worked around by specifying the
protocol as well<br>
&nbsp; &nbsp; (e.g., "openvpn:udp:3455).<br>
<br>
3) &nbsp;If the previous firewall configuration included a policy other
than<br>
&nbsp; &nbsp; ACCEPT in the nat, mangle or raw tables then Shorewall
would not set<br>
&nbsp; &nbsp; the policy to ACCEPT. This could result in a ruleset that
rejected or<br>
&nbsp; &nbsp; dropped all traffic.<br>
<br>
4) &nbsp;Specifying an interface name in the SOURCE column <br>
&nbsp; &nbsp; of /etc/shorewall/tcrules resulted in a startup error.<br>
<span style="font-weight: bold;"><br>
</span><span style="font-weight: bold;">2005-12-01
End of Support for Shorewall versions 2.0 and 2.2<br>
<br>
</span>Effective today, versions 2.0 and 2.2 are no longer supported.
This means that if you find a bug in one of these releases, we won't
fix it and if you ask for help with one of these releases, we will not
spend much time trying to solve your issue.<br>
<br>
<span style="font-weight: bold;">2005-11-25
Shorewall 3.0.2<br>
</span>
<pre>Problems Corrected in 3.0.2<br><br>1) A couple of typos in the one-interface sample configuration have<br>   been corrected.<br><br>2) The 3.0.1 version of Shorewall was incompatible with old versions of<br>   the Linux kernel (2.4.7 for example). The new code ignores errors<br>   produced when Shorewall 3.x is run on these ancient kernels.<br><br>3) Arch Linux installation routines has been improved.<br><br>New Features in 3.0.2<br><br>1) A new Webmin macro has been added. This macro assumes that Webmin is<br>   running on its default port (10000).<br></pre>
<span style="font-weight: bold;">2005-11-18
Shorewall 3.0.1</span><br>
<pre>Problems Corrected in 3.0.1 <br>

1) If the previous firewall configuration included a policy other than
   ACCEPT in the nat, mangle or raw tables then Shorewall would not set
   the policy to ACCEPT. This could result in a ruleset that rejected or
   dropped all traffic.

2) The Makefile was broken such that 'make' didn't always work correctly.

3) If the SOURCE or DEST column in a macro body was non-empty and a dash
   ("-") appeared in the corresponding column of an invocation of that
   macro, then an invalid rule was generated.

4) The comments in the /etc/shorewall/blacklist file have been updated to
   clarify that the PORTS column refers to destination port number/service
   names.

5) When CLAMPMSS is set to a value other than "No" and FASTACCEPT=Yes, the
   order of the rules generated was incorrect causing RELATED TCP connections
   to not have CLAMPMSS applied.

New Features in 3.0.1

1)  To make the macro facility more flexible, Shorewall now examines the
    contents of the SOURCE and DEST columns in both the macro body and in
    the invocation and tries to create the intended rule. If the value in
    the invocation appears to be an address (IP or MAC) or the name of an
    ipset, then it is placed after the value in the macro body. Otherwise,
    it is placed before the value in the macro body.

    Example 1:

    /etc/shorewall/macro.foo:

    PARAM        -            192.168.1.5      tcp    http

    /etc/shorewallrules:

    foo/ACCEPT   net          loc

    Effective rule:

    ACCEPT       net          loc:192.168.1.5   tcp   http

    Example 2:

    /etc/shorewall/macro.bar:

    PARAM        net           loc              tcp    http

    /etc/shorewall/rules:

    bar/ACCEPT   -             192.168.1.5

    Effective rule:

    ACCEPT       net           loc:192.168.1.5  tcp    http
</pre>
<p></p>
<hr style="width: 100%; height: 2px;"> <span style="font-weight: bold;">11/11/2005
Shorewall 3.0.0</span><br>
<pre>New Features in Shorewall 3.0.0<br><br>1) Error and warning messages are made easier to spot by using<br>   capitalization (e.g., ERROR: and WARNING:).<br><br>2) A new option 'critical' has been added to<br>   /etc/shorewall/routestopped. This option can be used to enable<br>   communication with a host or set of hosts during the entire<br>   "shorewall [re]start/stop" process. Listing a host with this option<br>   differs from listing it without the option in several ways:<br><br>   a) The option only affect traffic between the listed host(s) and the<br>   firewall itself.<br><br>   b) If there are any entries with 'critical', the firewall<br>   will be completely opened briefly during start, restart and stop but<br>   there will be no chance of any packets to/from the listed host(s)<br>   being dropped or rejected.<br><br>   Possible uses for this option are:<br><br>   a) Root file system is NFS mounted. You will want to list the NFS server<br>   in the 'critical' option.<br><br>   b) You are running Shorewall in a Crossbeam environment<br>   (www.crossbeam.com). You will want to list the Crossbeam interface<br>   in this option<br><br>3) A new 'macro' feature has been added.<br><br>   Macros are very similar to actions and can be used in similar<br>   ways. The differences between actions and macros are as follows:<br><br>   a) An action creates a separate chain with the same name as the<br>      action (when logging is specified on the invocation of an action,<br>      a chain beginning with "%" followed by the name of the action and<br>      possibly followed by a number is created). When a macro is<br>      invoked, it is expanded in-line and no new chain is created.<br><br>   b) An action may be specified as the default action for a policy;<br>      macros cannot be specified this way.<br><br>   c) Actions must be listed in either /usr/share/shorewall/actions.std<br>      or in /etc/shorewall/actions. Macros are defined simply by<br>      placing their definition file in the CONFIG_PATH.<br><br>   d) Actions are defined in a file with a name beginning with<br>      "action." and followed by the name of the action. Macro files are<br>      defined in a file with a name beginning with "macro.".<br><br>   e) Actions may invoke other actions. Macros may not directly invoke<br>      other macros although they may invoke other macros indirectly<br>      through an action.<br><br>   f) DNAT[-] and REDIRECT[-] rules may not appear in an action. They<br>      are allowed in a macro with the restriction that the a macro<br>      containing one of these rules may not be invoked from an action.<br><br>   g) The values specified in the various columns when you invoke a<br>      macro are substituted in the corresponding column in each rule in<br>      the macro. The first three columns get special treatment:<br><br>      ACTION	 If you code PARAM as the action in a macro then<br>		 when you invoke the macro, you can include the<br>		 name of the macro followed by a slash ("/") and<br>		 an ACTION (either built-in or user-defined. All<br>		 instances of PARAM in the body of the macro will be<br>		 replaced with the ACTION.<br><br>		 Any logging applied when the macro is invoked is<br>		 applied following the same rules as for actions.<br><br>      SOURCE and<br>      DEST	 If the rule in the macro file specifies a value and<br>		 the invocation of the rule also specifies a value then<br>		 the value in the invocation is appended to the value<br>		 in the rule using ":" as a separator.<br><br>		 Example:<br><br>		 /etc/shorewall/macro.SMTP<br><br>		 PARAM		-	loc	tcp	25<br><br>		 /etc/shorewall/rules:<br><br>		 SMTP/DNAT:info		net	192.168.1.5<br><br>		 Would be equivalent to the following in the rules file:<br><br>		 DNAT:info	   net	loc:192.168.1.5	tcp	25<br><br>      Rest	 Any value in the invocation replaces the value in the<br>		 rule in the macro.<br><br>    One additional restriction applies to the mixing of macros and<br>    actions. Macros that are invoked from actions cannot themselves<br>    invoke other actions.<br><br>4)  If you have 'make' installed on your firewall, then when you use<br>    the '-f' option to 'shorewall start' (as happens when you reboot),<br>    if your /etc/shorewall/ directory contains files that were modified<br>    after Shorewall was last restarted then Shorewall is started using<br>    the config files rather than using the saved configuration.<br><br>5)  The 'arp_ignore' option has been added to /etc/shorewall/interfaces<br>    entries. This option sets<br>    /proc/sys/net/ipv4/conf/&lt;interface&gt;/arp_ignore. By default, the<br>    option sets the value to 1. You can also write arp_ignore=&lt;value&gt;<br>    where value is one of the following:<br><br>        1 - reply only if the target IP address is local address<br>        configured on the incoming interface<br><br>	2 - reply only if the target IP address	is local address<br>	configured on the incoming interface and both with the sender's<br>	IP address are part from same subnet on this interface<br><br>	3 - do not reply for local addresses configured with scope<br>	host, only resolutions for global and link addresses are<br>	replied<br><br>	4-7 - reserved<br><br> 	8 - do not reply for all local addresses<br><br>    WARNING -- DO NOT SPECIFY arp_ignore FOR ANY INTERFACE INVOLVED IN<br>    PROXY ARP.<br><br>6)  In /etc/shorewall/rules, "all+" in the SOURCE or DEST column works<br>    like "all" but also includes intrazone traffic. So the rule:<br><br>	 ACCEPT     loc		 all+	 tcp	   22<br><br>    would allow SSH traffic from loc-&gt;loc whereas<br><br>	 ACCEPT     loc		 all	 tcp	   22<br><br>    does not.<br><br>7)  A new FASTACCEPT option has been added to shorewall.conf.<br><br>    Normally, Shorewall defers accepting ESTABLISHED/RELATED packets<br>    until these packets reach the chain in which the original connection<br>    was accepted. So for packets going from the 'loc' zone to the 'net'<br>    zone, ESTABLISHED/RELATED packets are ACCEPTED in the 'loc2net'<br>    chain.<br><br>    If you set FASTACCEPT=Yes, then ESTABLISHED/RELEATED packets are<br>    accepted early in the INPUT, FORWARD and OUTPUT chains. If you set<br>    FASTACCEPT=Yes then you may not include rules in the ESTABLISHED or<br>    RELATED sections of /etc/shorewall/rules.<br><br>8)  Shorewall now generates an error if the 'norfc1918' option is<br>    specified for an interface with an RFC 1918 address.<br><br>9)  You may now specify "!" followed by a list of addresses in the<br>    SOURCE and DEST columns of entries in /etc/shorewall/rules,<br>    /etc/shorewall/tcrules and in action files and Shorewall will<br>    generate the rule that you expect.<br><br>    Example 1 (/etc/shorewall/rules):<br><br>    #ACTION    SOURCE				DEST	PROTO     DEST PORT(S)<br>    ACCEPT     loc:!192.168.1.0/24,10.0.0.0/8	net	tcp	  80<br><br>    That rule would allow loc-&gt;net HTTP access except for the local<br>    networks 192.168.1.0/24 and 10.0.0.0/8.<br><br>    Example 2 (/etc/shorewall/rules):<br><br>    #ACTION    SOURCE				DEST	PROTO     DEST PORT(S)<br>    ACCEPT     loc:10.0.0.0/24!10.0.0.4,10.0.0.22 \<br>						net	tcp	  80<br><br>    That rule would allow loc-&gt;net HTTP access from the local<br>    network 10.0.0.0/24 except for hosts 10.0.0.4 and 10.0.0.22.<br><br>10) Tunnel types "openvpnserver" and "openvpnclient" have been added<br>    to reflect the introduction of client and server OpenVPN<br>    configurations in OpenVPN 2.0.<br><br>11) The COMMAND variable is now set to 'restore' in restore<br>    scripts. The value of this variable is sometimes of interest to<br>    programmers providing custom /etc/shorewall/tcstart scripts.<br><br>12) Previously, if you defined any intra-zone rule(s) then any traffic<br>    not matching the rule(s) was subject to normal policies (which<br>    usually turned out to involve the all-&gt;all REJECT policy). Now, the<br>    intra-zone ACCEPT policy will still be in effect in the presence of<br>    intra-zone rules. That policy can still be overridden by an<br>    explicit policy in your /etc/shorewall/policy file.<br><br>    Example:<br><br>    /etc/shorewall/rules:<br><br>    DNAT	loc:!192.168.1.4  loc:192.168.1.4:3128	tcp	80<br><br>    Any other loc-&gt;loc traffic will still be accepted. If you want to<br>    also log that other loc-&gt;loc traffic at the info log level then<br>    insert this into /etc/shorewall/policy:<br><br>    #SOURCE	DEST	POLICY	LOG LEVEL<br>    loc		loc	ACCEPT	info<br><br>13) Prior to Shorewall 2.5.3, the rules file only controlled packets in<br>    the Netfilter states NEW and INVALID. Beginning with this release,<br>    the rules file can also deal with packets in the ESTABLISHED and<br>    RELATED states.<br><br>    The /etc/shorewall/rules file may now be divided into<br>    "sections". Each section is introduced by a line that begins with<br>    the keyword SECTION followed by the section name. Sections<br>    are as listed below and must appear in the order shown.<br><br>    ESTABLISHED<br><br>	Rules in this section apply to packets in the ESTABLISHED<br>	state.<br><br>    RELATED<br><br>	Rules in this section apply to packets in the RELATED state.<br><br>    NEW<br><br>	Rules in this section apply to packets in the NEW and INVALID<br>	states.<br><br>    Rules in the ESTABLISHED and RELATED sections are limited to the<br>    following ACTIONs:<br><br>	ACCEPT, DROP, REJECT, QUEUE, LOG and User-defined actions.<br><br>    Macros may be used in these sections provided that they expand to<br>    only these ACTIONs.<br><br>    At the end of the ESTABLISHED and RELATED sections, there is an<br>    implicit "ALLOW   all	  all all" rule.<br><br>    RESTRICTION: If you specify FASTACCEPT=Yes in<br>    /etc/shorewall.shorewall.conf then the ESTABLISHED and RELATED<br>    sections must be empty.<br><br>14) The value 'ipp2p' is once again allowed in the PROTO column of<br>    the rules file. It is recommended that rules specifying 'ipp2p'<br>    only be included in the ESTABLISHED section of the file.<br><br><br>15) Shorewall actions lack a generalized way to pass parameters to an<br>    extension script associated with an action. To work around this<br>    lack, some users have used the log tag as a parameter. This works<br>    but requires that a log level other than 'none' be specified when<br>    the action is invoked. Beginning with this release, you can invoke<br>    an action with 'none'.<br><br>    Example:<br><br>	#ACTION				SOURCE          DEST<br>	A:none:these,are,parameters     $FW		net<br><br>    When /etc/shorewall/A is invoked, the LEVEL variable will be empty<br>    but the TAG variable will contain "these,are,parameters" which<br>    can be easily parsed to isolate "these", "are" and "parameters":<br><br>	ifs=$IFS<br>	IFS=,<br>	set -- $TAG<br>	IFS=$ifs<br><br>    Now, $1 = these, $2 = are and $3 = parameters<br><br>16) The "shorewall check" command now checks the /etc/shorewall/masq,<br>    /etc/shorewall/blacklist, /etc/shorewall/proxyarp,<br>    /etc/shorewall/nat and /etc/shorewall/providers files.<br><br>17) Arne Bernin's "tc4shorewall" package has been integrated into<br>    Shorewall.<br><br>    See: http://www.shorewall.net/3.0/traffic_shaping.htm for details.<br><br>    Thanks, Arne!<br><br>18) When /usr/share/shorewall/functions is loaded it now sets<br><br>	 SHOREWALL_LIBRARY=Loaded<br><br>    Application code such as /etc/shorewall/tcstart may test that<br>    variable to determine if the library has been loaded into the<br>    current shell process.<br><br>19) The install.sh script now does a much cleaner job of backing up the<br>    current installation. It copies the directories /etc/shorewall,<br>    /usr/share/shorewall and /var/lib/shorewall to a directory of the<br>    same name with "-$VERSION.bkout" appended. The init script and<br>    /sbin/shorewall are backed up to the /usr/share/shorewall and<br>    /var/lib/shorewall directories respectively. This makes it very<br>    simple to remove the backups:<br><br>	   rm -rf /etc/shorewall-*.bkout<br>	   rm -rf /usr/share/shorewall-*.bkout<br>	   rm -rf /var/lib/shorewall-*.bkout<br><br>20) A new '-n' option has been added to the "start", "restart",<br>    "restore",  "stop" and "try" commands. This option instructs<br>    Shorewall to not alter the routing in any way.<br><br>    This option is useful when you have a multi-ISP environment because<br>    it prevents the route cache from being flushed which preserves the<br>    mapping of end-point address pairs to routes.<br><br>21) The output of "shorewall dump" now includes a capabilities report<br>    such as the one produced by "shorewall show capabilities".<br><br>22) The "plain" zone type has been replaced by "ipv4". The types<br>    "IPv4" and "IPV4" are synonyms for "ipv4". In addition, "IPSEC",<br>    "ipsec4" and "IPSEC4" are recognized synonyms for "ipsec".<br><br>23) The NEWNOTSYN and LOGNEWNOTSYN options in shorewall.conf have been<br>    removed as have the 'newnotsyn' options in /etc/shorewall/interfaces<br>    and /etc/shorewall/hosts. See the Migration Considerations for<br>    instructions if you wish to block "new-not-syn" TCP packets.<br><br>24) The "shorewall show zones" command now displays the zone type. You<br>    must have restarted Shorewall using this release before this feature<br>    will work correctly.<br><br>25) The multi-ISP code now requires that that you set MARK_IN_FORWARD_CHAIN=Yes<br>    in shorewall.conf. This is done to ensure that "shorewall refresh" will<br>    work correctly.<br><br>26) Shorewall now supports UDP IPP2P matching. In addition to the "ipp2p"<br>    keyword in the PROTOCOL column of the relevant files, the following<br>    values may be specified:<br><br>	ipp2p:tcp           Equivalent to ipp2p and matches TCP traffic<br>			    only.<br>	ipp2p:udp           Matches UDP traffic.<br>	ipp2p:all           Matches both UDP and TCP traffic. You may<br>			    not specify a SOURCE PORT with this PROTOCOL.<br><br>27) Normally MAC verification triggered by the 'maclist' interface and host<br>    options is done out of the INPUT and FORWARD chains of the filter table.<br>    Users have reported that under some circumstances, MAC verification is<br>    failing for forwarded packets when the packets are being forwarded out<br>    of a bridge.<br><br>    To work around this problem, a MACLIST_TABLE option has been added to<br>    shorewall.conf. The default value is MACLIST_TABLE=filter which results<br>    in the current behavior. If MACLIST_TABLE=mangle then filtering will<br>    take place out of the PREROUTING chain of the mangle table. Because<br>    the REJECT target may not be used in the PREROUTING chain, the settings<br>    MACLIST_DISPOSITION=REJECT and MACLIST_TABLE=mangle are incompatible.<br><br>28) The sample configurations are now packaged with the product. They are<br>    in the Samples directory on the tarball and are in the RPM they are<br>    in the Samples sub-directory of the Shorewall documentation<br>    directory.<br></pre>
<span style="font-weight: bold;">10/31/2005
Shorewall 2.4.6<br>
<br>
</span>Problems Corrected in 2.4.6<br>
<ol>
  <li>"shorewall refresh" would fail if there were entries in
/etc/shorewall/tcrules with non-empty USER/GROUP or TEST columns.</li>
  <li>An unprintable character in a comment caused /sbin/shorewall to
fail when used with a light-weight shell like 'dash'.</li>
  <li>When using some flavors of 'ash', certain /sbin/shorewall
commands produced 'ipset: not found' messages.</li>
  <li>Support for OpenVPN TCP tunnels was released in Shorewall 2.2.0
but the implementation was incomplete. It has now been completed and is
documented in the /etc/shorewall/tunnels file.</li>
  <li>The test that Shorewall uses to detect the availability of the
owner match capability has been changed to avoid the generation of
ipt_owner messages under kernel 2.6.14.</li>
</ol>
New Features in 2.4.6<br>
<ol>
  <li>Normally MAC verification triggered by the 'maclist' interface
and host options is done out of the INPUT and FORWARD chains of the
filter table. Users have reported that under some circulstances, MAC
verification is failing for forwarded packets when the packets are
being forwarded out of a bridge.<br>
    <br>
To work around this problem, a MACLIST_TABLE option has been added to
shorewall.conf. The default value is MACLIST_TABLE=filter which results
in the current behavior. If MACLIST_TABLE=mangle then filtering will
take place out of the PREROUTING chain of the mangle table. Because the
REJECT target may not be used in the PREROUTING chain, the settings
MACLIST_DISPOSITION=REJECT and MACLIST_TABLE=mangle are incompatible.</li>
  <li>A "dump" command has been added to /sbin/shorewall for
compatibility with Shorewall 3.0. In 2.4.6, the "dump" command provides
the same output as the "status".<br>
  </li>
</ol>
<span style="font-weight: bold;">Old News <a href="oldnews.html">here</a><br>
</span>
</body>
</html>
